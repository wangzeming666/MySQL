truncate table: 保留表头，清空表列表
truncate table table_name：保留某表格表头


create table order_copy(order_id int,
date datetime,
customers_id int,
amount decimal(5,2));

insert into order_copy(order_id, date, customers_id, amount)
select * from orders;

truncate table order_copy: 保留order_copy表头，内容删除

HAVING：指定条件，过滤 group by 分组的结果
SELECT column1, column2..., columnN
FROM table1, table2..., columnN
WHERE[condition]
GROUP BY column1, column2..., columnN
HAVING[condition]
ORDER BY column1, column2..., columnN [ACE/DESC]
注意：1. where语句是对相对select中的列加条件限制，having语句是对group by语句里的组group加条件限制
      2. select语句和where语句是一对儿，group by语句和having语句是一对
      
select gender, sum(grade) from students
group by gender
having sum(grade) > 950;

select sum(salary) from customers group by salary;

注意：
    1. select语句后面紧跟的列名，必须也同时出现在group by语句里
    2. group by语句常用于SQL函数
    
SQL函数
    1. aggregate聚合函数：
        avg():求平均值，计算从列中取得的值，返回一个单一的值
        count():求总数
        max():求最大值
        min():求最小值
        sum():求和
        
        ep：select customers_id, max(amount) from orders;
    2. scalar标量函数:
        LCASE(): 以小写字母展示
        ucase(): 以大写字母展示
        mid(): 从某个文本字段提取字符
        select mid(column, start[, lenth]) from table_name
        length(): 返回字段的长度、
        select length（name) from customers;
        round(): 对某个数值字段进行制定小数位数的四舍五入
        select round(amount, 0) from orders;
        now(): 返回当前的系统日期和时间
        select NOW() from orders;
        format(): 格式化某个字段的显示方式
        select format(column_name, format) from table_name;
        select order_id, date_format(now(), '%Y-%M-%D') as date from orders;
        
        ep: select mid(name,1,3) from customers;
        注意：索引1代表name中的第一个字符，不是0
        
子查询：
必须用括号包起来

select 语句嵌套子查询
SELECT column1, cloumn2..., columnN
FROM table1, table2.., tableN
WHERE columnX 操作符
(SELECT column1, column2..., columnN
FROM table1, table2..., tableN
WHERE condition);

select * from customers
where id in 
(select id from customers
where salary > 4500);ee
ep:
查看工资大于所有客户的平均工资的客户有哪些？
select salary from customers where salary > (select avg(salary) from customers);
ep:
select customers_id, name, amount 
from orders, customers 
where amount < 
(select avg(amount) from orders)
AND c_id = id;


insert 语句嵌套子查询
INSERT INTO table_name(column1, column2..., columnN)
SELECT column12, column2..., columnN
FROM table1, table2..., tableN 
WHERE condition;

ep:
create table customers_c(
id int not null, 
name varchar(20), 
age int, 
address varchar(50), 
salary decimal(18,2));

insert into customers_c 
select * from customers 
where id in 
(select customers_id from orders where amount > 
(select avg(amount) from orders) 
and customers_id = id
);

insert into customers_c(
select * from customers
where id in 
(select customers_id from orders where amount >
(select avg(amount) from orders)
);

